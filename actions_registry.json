{
  "version": "1.0",
  "description": "Registry of available actions for AI planning in the JSON-centric orchestration system",
  "actions": [
    {
      "name": "send_reply_text",
      "description": "Send a text reply to a message in a Matrix room",
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text content to send as a reply"
          },
          "reply_to_event_id": {
            "type": "string",
            "description": "The event ID of the message to reply to (optional, for threading)"
          }
        },
        "required": ["text"],
        "additionalProperties": false
      },
      "executor": "send_reply_tool"
    },
    {
      "name": "send_message_text",
      "description": "Send a standalone text message to a Matrix room (not a reply)",
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text content to send"
          }
        },
        "required": ["text"],
        "additionalProperties": false
      },
      "executor": "send_message_tool"
    },
    {
      "name": "react_to_message",
      "description": "Add an emoji reaction to a specific message",
      "parameters": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "The event ID of the message to react to"
          },
          "emoji": {
            "type": "string",
            "description": "The emoji to use as a reaction (e.g., 'üëç', '‚ù§Ô∏è', 'üòÇ')"
          }
        },
        "required": ["event_id", "emoji"],
        "additionalProperties": false
      },
      "executor": "react_to_message_tool"
    },
    {
      "name": "describe_image",
      "description": "Generate a detailed description of an image that was shared in the chat",
      "parameters": {
        "type": "object",
        "properties": {
          "image_event_id": {
            "type": "string",
            "description": "The event ID of the image message to describe"
          },
          "focus_areas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of specific aspects to focus on in the description"
          }
        },
        "required": ["image_event_id"],
        "additionalProperties": false
      },
      "executor": "describe_image_tool"
    },
    {
      "name": "manage_user_memory",
      "description": "Store, update, or retrieve information about a specific user",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The Matrix user ID to manage memory for"
          },
          "operation": {
            "type": "string",
            "enum": ["store", "update", "retrieve", "delete"],
            "description": "The operation to perform on user memory"
          },
          "memory_key": {
            "type": "string",
            "description": "The key/category for the memory item (e.g., 'preferences', 'context', 'facts')"
          },
          "memory_value": {
            "type": "string",
            "description": "The value to store or update (required for store/update operations)"
          }
        },
        "required": ["user_id", "operation", "memory_key"],
        "additionalProperties": false
      },
      "executor": "manage_user_memory_tool"
    },
    {
      "name": "manage_channel_summary",
      "description": "Create, update, or retrieve a summary of channel conversation history",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["request_update", "get_current"],
            "description": "The action to perform on the channel summary"
          },
          "summary_scope": {
            "type": "string",
            "enum": ["recent", "full", "since_last"],
            "description": "The scope of messages to include in the summary"
          },
          "custom_focus": {
            "type": "string",
            "description": "Optional custom focus or theme for the summary"
          }
        },
        "required": ["action"],
        "additionalProperties": false
      },
      "executor": "manage_channel_summary_tool"
    },
    {
      "name": "manage_system_prompt",
      "description": "Update or retrieve the system prompt configuration for AI behavior",
      "parameters": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": ["get", "set", "reset"],
            "description": "The operation to perform on the system prompt"
          },
          "prompt_section": {
            "type": "string",
            "enum": ["personality", "behavior", "capabilities", "constraints"],
            "description": "The specific section of the system prompt to modify"
          },
          "new_content": {
            "type": "string",
            "description": "The new content for the prompt section (required for 'set' operation)"
          }
        },
        "required": ["operation"],
        "additionalProperties": false
      },
      "executor": "manage_system_prompt_tool"
    },
    {
      "name": "get_room_info",
      "description": "Retrieve information about the current Matrix room",
      "parameters": {
        "type": "object",
        "properties": {
          "info_type": {
            "type": "string",
            "enum": ["basic", "members", "settings", "history_stats"],
            "description": "The type of room information to retrieve"
          }
        },
        "required": ["info_type"],
        "additionalProperties": false
      },
      "executor": "get_room_info_tool"
    },
    {
      "name": "delegate_to_openrouter",
      "description": "Delegate a complex query to OpenRouter with specific model and parameters",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The query or prompt to send to OpenRouter"
          },
          "model": {
            "type": "string",
            "description": "Specific model to use (optional, uses default if not specified)"
          },
          "include_context": {
            "type": "boolean",
            "description": "Whether to include current conversation context"
          },
          "response_format": {
            "type": "string",
            "enum": ["text", "json"],
            "description": "Expected response format from the model"
          }
        },
        "required": ["query"],
        "additionalProperties": false
      },
      "executor": "delegate_to_openrouter_tool"
    },
    {
      "name": "do_not_respond",
      "description": "Explicitly choose not to respond to a message (useful for messages that don't require a response)",
      "parameters": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Optional reason for not responding"
          }
        },
        "additionalProperties": false
      },
      "executor": "do_not_respond_tool"
    },
    {
      "name": "farcaster_post_cast",
      "description": "Posts a new cast (message) to Farcaster. Can optionally specify a channel ID or embed URLs.",
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The content of the cast"
          },
          "channel_id": {
            "type": "string",
            "description": "Optional. The ID of the Farcaster channel to post in (e.g., 'neynar', 'farcaster')"
          },
          "embed_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Optional. A list of URLs to embed in the cast"
          }
        },
        "required": ["text"],
        "additionalProperties": false
      },
      "executor": "farcaster_post_cast_tool"
    },
    {
      "name": "farcaster_get_home_feed",
      "description": "Fetches the latest casts from Farcaster users the bot is following.",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "description": "Number of casts to fetch (default: 25)"
          }
        },
        "additionalProperties": false
      },
      "executor": "farcaster_get_home_feed_tool"
    },
    {
      "name": "farcaster_like_cast",
      "description": "Likes a specific Farcaster cast.",
      "parameters": {
        "type": "object",
        "properties": {
          "target_cast_hash": {
            "type": "string",
            "description": "The hash of the cast to like"
          }
        },
        "required": ["target_cast_hash"],
        "additionalProperties": false
      },
      "executor": "farcaster_like_cast_tool"
    },
    {
      "name": "farcaster_reply_to_cast",
      "description": "Replies to a specific Farcaster cast.",
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The content of the reply"
          },
          "parent_cast_hash": {
            "type": "string",
            "description": "The hash of the cast to reply to"
          },
          "channel_id": {
            "type": "string",
            "description": "Optional. The ID of the Farcaster channel the original cast is in"
          },
          "embed_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Optional. A list of URLs to embed in the reply"
          }
        },
        "required": ["text", "parent_cast_hash"],
        "additionalProperties": false
      },
      "executor": "farcaster_reply_to_cast_tool"
    },
    {
      "name": "farcaster_get_notifications",
      "description": "Fetches recent Farcaster notifications for the bot, such as mentions or replies.",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "description": "Number of notifications to fetch (default: 25)"
          },
          "filter_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["mention", "reply", "like", "recast", "follow"]
            },
            "description": "Optional. Filter notifications by type(s)"
          }
        },
        "additionalProperties": false
      },
      "executor": "farcaster_get_notifications_tool"
    },
    {
      "name": "update_farcaster_channel",
      "description": "Update a Farcaster channel (home feed or notifications) to fetch the latest content",
      "parameters": {
        "type": "object",
        "properties": {
          "channel_type": {
            "type": "string",
            "enum": ["home", "notifications"],
            "description": "The type of Farcaster channel to update"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "description": "Number of items to fetch (default: 25)"
          }
        },
        "required": ["channel_type"],
        "additionalProperties": false
      },
      "executor": "update_farcaster_channel_tool"
    },
    {
      "name": "view_channel_context",
      "description": "View recent message context from any channel (Matrix room, Farcaster home, or Farcaster notifications)",
      "parameters": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The channel ID to view context for (Matrix room ID or special IDs like 'farcaster_home', 'farcaster_notifications')"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "Number of recent messages to include in context (default: 20)"
          }
        },
        "required": ["channel_id"],
        "additionalProperties": false
      },
      "executor": "view_channel_context_tool"
    },
    {
      "name": "farcaster_quote_cast",
      "description": "Quote a specific Farcaster cast with additional commentary.",
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The commentary text to add when quoting the cast"
          },
          "quoted_cast_hash": {
            "type": "string",
            "description": "The hash of the cast to quote"
          },
          "channel_id": {
            "type": "string",
            "description": "Optional. The ID of the Farcaster channel to post the quote in"
          },
          "embed_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Optional. A list of URLs to embed in the quote cast"
          }
        },
        "required": ["text", "quoted_cast_hash"],
        "additionalProperties": false
      },
      "executor": "farcaster_quote_cast_tool"
    }
  ]
}